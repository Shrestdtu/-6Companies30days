// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
  public:
    bool canPair(vector<int> nums, int k) 
    {
        // Code here.
        int n=nums.size();
        if(n&1)
        {
            return false;
        }
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum+=nums[i];
        }
        int ch=sum%k;
        if(ch!=0)
        {
            return false;
        }
        unordered_map<int,int>h;
        for(int i=0;i<nums.size();++i)
        {
            h[nums[i]%k]++;
        }
        for(int i=0;i<nums.size();++i)
        {
            if(h[nums[i]%k]==0)
            {
                continue;
            }
            h[nums[i]%k]--;
            
            if(h[(k-nums[i]%k)%k]==0)
            {
                 return false;
            }
            else 
            {
             
                h[(k-nums[i]%k)%k]--;
            }
        }
        return true;
    }
};

// { Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int n, k;
        cin >> n >> k;
        vector<int> nums(n);
        for (int i = 0; i < nums.size(); i++) cin >> nums[i];
        Solution ob;
        bool ans = ob.canPair(nums, k);
        if (ans)
            cout << "True\n";
        else
            cout << "False\n";
    }
    return 0;
}  // } Driver Code Ends
