// { Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends
class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        vector<int>v;
        int i=0,j=0;
        int m=c-1;
        int n=r-1;
        while(i<=n && j<=m)
        {
            for(int k=j;k<=m;k++)
            {
                v.push_back(matrix[i][k]);
            }
            i++;
            if(i>n || j>m)
            {
                break;   
            }
            for(int k=i;k<=n;k++)
            {
                v.push_back(matrix[k][m]);
            }
            m--;
            if(i>n || j>m)
            {
                break;   
            }
            for(int k=m;k>=j;k--)
            {
                v.push_back(matrix[n][k]);
            }
            n--;
            if(i>n || j>m)
            {
                break;   
            }
            for(int k=n;k>=i;k--)
            { 
                v.push_back(matrix[k][j]);
            }
            j++;
        }
        return v;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}  // } Driver Code Ends
